name: CI

on:
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  run-tests:
    name: Run tests and clippy
    runs-on: ubuntu-latest
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: clippy
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture --test-threads 1

  analyze-dependencies:
    name: Analyze dependencies and format
    runs-on: ubuntu-latest
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-pre-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt
      - name: Install cargo-sort
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-sort
      - name: Install cargo-machete 
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-machete
      - name: Check cargo dependencies order
        uses: actions-rs/cargo@v1
        with:
          command: sort
          args: -w -c
      - name: Detect unused dependencies
        uses: actions-rs/cargo@v1
        with:
          command: machete
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  build-lambdas:
    name: Build lambdas
    runs-on: ubuntu-latest
    env:
      cache_id: tests
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - name: Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross
      - name: Build lambdas
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: build-lambda --use-cross --target aarch64-unknown-linux-gnu
